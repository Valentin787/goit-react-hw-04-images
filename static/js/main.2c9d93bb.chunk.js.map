{"version":3,"sources":["components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/ModalLoader/ModalLoader.module.css","components/App/App.module.css","components/Overlay/Overlay.module.css","components/Modal/Modal.module.css","components/Searchbar/Searchbar.module.css","services/pixabay-api.js","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/ModalLoader/ModalLoader.jsx","components/Overlay/Overlay.jsx","components/Modal/Modal.jsx","components/App/App.jsx","index.js"],"names":["module","exports","BASE_URL","PARAMS","key","image_type","orientation","editors_choice","safesearch","per_page","FILTERS","Messages","state","page","totalHits","query","fetch","a","params","q","axios","get","data","filteredData","filterResponseData","identifiedData","identifyData","checkNoMatches","promisify","nextPage","checkCollectionEnd","currentPage","Error","Promise","resolve","hits","map","filterResponseHit","hit","reduce","filteredObj","filter","item","id","nanoid","Searchbar","onSubmit","useState","value","setValue","className","s","searchbar","form","e","preventDefault","type","button","size","input","onChange","target","autoComplete","autoFocus","placeholder","ImageGalleryItem","onClick","url","image","src","alt","ImageGallery","onItemClick","images","gallery","webformatURL","Button","ModalLoader","color","loaderRef","useRef","document","querySelector","loader","height","width","timeout","createPortal","current","Overlay","onOverlayClick","component","currentTarget","overlay","Modal","onClose","modalRef","useEffect","window","addEventListener","onEscPress","removeEventListener","code","modal","View","App","setImages","view","setView","backupView","setBackupView","modalImageURL","setModalImageURL","handleLoading","promiseCallback","thenCallback","then","catch","handleFetchError","err","message","pixabay","find","img","largeImageURL","prevState","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2c9d93bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__26F25\",\"image\":\"ImageGalleryItem_image__32_jr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ImageGallery_gallery__gboaM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"ModalLoader_loader__8XFZM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__aOmNj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Overlay_overlay__3DDtl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__P3_V5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__jo466\",\"form\":\"Searchbar_form__XuKjc\",\"button\":\"Searchbar_button__MhnaU\",\"input\":\"Searchbar_input__2C4aO\"};","import axios from 'axios';\nimport { nanoid } from 'nanoid';\n\nconst BASE_URL = 'https://pixabay.com/api';\n\nconst PARAMS = {\n  key: '24268385-a09efe65560efa0dec086fa93',\n  image_type: 'photo',\n  orientation: 'horizontal',\n  editors_choice: 'true',\n  safesearch: 'true',\n  per_page: '12',\n};\n\nconst FILTERS = ['webformatURL', 'largeImageURL'];\n\nconst Messages = {\n  NO_MATCHES: 'There are no matching images.',\n  COLLECTION_END: \"You've reached the end of search results.\",\n};\n\nconst state = {\n  page: 1,\n  totalHits: null,\n  query: null,\n};\n\nconst fetch = async (query = 'cat', page = 1) => {\n  state.page = page;\n\n  const params = {\n    q: query,\n    page,\n    ...PARAMS,\n  };\n\n  const { data } = await axios.get(BASE_URL, {\n    params,\n  });\n  const filteredData = filterResponseData(data);\n  const identifiedData = identifyData(filteredData);\n\n  checkNoMatches(data.totalHits);\n  state.totalHits = data.totalHits;\n  state.query = query;\n\n  return promisify(identifiedData);\n};\n\nconst nextPage = async () => {\n  checkCollectionEnd(state.page);\n  return await fetch(state.query, state.page + 1);\n};\n\nconst checkCollectionEnd = currentPage => {\n  const isCollectionEnd = currentPage * PARAMS.per_page >= state.totalHits;\n  if (isCollectionEnd) {\n    throw new Error(Messages.COLLECTION_END);\n  }\n};\n\nconst checkNoMatches = totalHits => {\n  if (totalHits === 0) {\n    throw new Error(Messages.NO_MATCHES);\n  }\n};\n\nconst promisify = data => {\n  return new Promise(resolve => resolve(data));\n};\n\nconst filterResponseData = data => {\n  return data.hits.map(filterResponseHit);\n};\n\nconst filterResponseHit = hit => {\n  return FILTERS.reduce((filteredObj, filter) => {\n    filteredObj[filter] = hit[filter];\n    return filteredObj;\n  }, {});\n};\n\nconst identifyData = data => {\n  return data.map(item => ({ id: nanoid(), ...item }));\n};\n\nexport { fetch, nextPage, Messages };\n","import PropTypes from 'prop-types';\nimport s from './Searchbar.module.css';\nimport { BiSearch } from 'react-icons/bi';\nimport { useState } from 'react';\n\n\nconst Searchbar = ({onSubmit}) => {\n  const [value, setValue] = useState('')\n\n  const onEventSubmit = e => {\n    e.preventDefault();\n    onSubmit(value);\n  };\n\n  const onChange = e => {\n    setValue(e.target.value );\n  };\n\n  return (\n      <header className={s.searchbar}>\n        <form className={s.form} onSubmit={onEventSubmit}>\n          <button type=\"submit\" className={s.button}>\n            <BiSearch size={20} />\n          </button>\n\n          <input\n            className={s.input}\n            onChange={onChange}\n            value={value}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ onClick, url }) => {\n  return (\n    <li onClick={onClick} className={s.item}>\n      <img className={s.image} src={url} alt=\"\" />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  url: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nfunction ImageGallery({ onItemClick, images }) {\n  return (\n    <ul className={s.gallery}>\n      {images.map(({ id, webformatURL }) => (\n        <ImageGalleryItem\n          onClick={() => onItemClick(id)}\n          key={id}\n          url={webformatURL}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button className={s.button} type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import Loader from 'react-loader-spinner';\nimport { useRef } from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { createPortal } from 'react-dom';\nimport s from './ModalLoader.module.css';\nimport PropTypes from 'prop-types';\n\n\n\nconst ModalLoader = ({ color = '#3766e6' }) => {\n  const loaderRef = useRef(document.querySelector('#loader'));\n\n  const loader = (\n    <div className={s.loader}>\n      <Loader type=\"Triangle\" color={color} height={100} width={100} timeout={0} />\n    </div>\n  );\n\n  return createPortal(loader, loaderRef.current);\n};\n\nModalLoader.propTypes = {\n  color: PropTypes.string,\n};\n\nexport default ModalLoader;\n","import s from './Overlay.module.css';\nimport * as PropTypes from 'prop-types';\n\nconst Overlay = ({onOverlayClick,component}) => {\n  const handleOverlayClick = e => {\n    if (e.target === e.currentTarget) {\n      onOverlayClick();\n    }\n  };\n  return (\n      <div onClick={handleOverlayClick} className={s.overlay}>\n        {component}\n      </div>\n    );\n}\n\nOverlay.propTypes = {\n  onOverlayClick: PropTypes.any,\n  component: PropTypes.any,\n};\n\nexport default Overlay;\n","import { useRef,useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Overlay from 'components/Overlay';\nimport s from './Modal.module.css';\nimport ModalLoader from 'components/ModalLoader';\n\n\n\nconst Modal = ({ url, onClose }) => {\n  const modalRef = useRef(document.querySelector('#modal'));\n\n  useEffect(() => {\n    window.addEventListener('keydown', onEscPress);\n    return()=>window.removeEventListener('keydown', onEscPress);\n  })\n\n  const onEscPress = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n  const modal = (\n      <div className={s.modal}>\n        <ModalLoader />\n        <img src={url} alt=\"\" />\n      </div>\n    );\n\n    return createPortal(\n      <Overlay onOverlayClick={onClose} component={modal} />,\n      modalRef.current,\n    );\n}\nModal.propTypes = {\n  url: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import { useEffect,useState } from 'react';\nimport * as pixabay from 'services/pixabay-api';\nimport Searchbar from 'components/Searchbar';\nimport ImageGallery from 'components/ImageGallery';\nimport Button from 'components/Button';\nimport ModalLoader from 'components/ModalLoader';\nimport s from './App.module.css';\nimport Modal from 'components/Modal';\n\n\nconst View = {\n  EMPTY: 'empty',\n  LOADING: 'loading',\n  NORMAL: 'normal',\n  END: 'end',\n  MODAL: 'modal',\n}\n\n\nconst App = () => {\n \n\n  const [images, setImages] = useState([])\n  const [view, setView] = useState(View.LOADING)\n  const [backupView, setBackupView] = useState('');\n  const [modalImageURL, setModalImageURL] = useState('');\n\n const handleSubmit = query => {\n  const promiseCallback = () => pixabay.fetch(query);\n  const thenCallback = images => setImages(images)\n    handleLoading(promiseCallback, thenCallback);\n };\n  \n   const handleLoadMore = () => {\n    const promiseCallback = pixabay.nextPage;\n     const thenCallback = images =>  setImages(prevState => [...prevState, ...images])\n\n    handleLoading(promiseCallback, thenCallback);\n  };\n\n  const handleLoading = (promiseCallback, thenCallback) => {\n    setBackupView(view)\n    setView(View.LOADING)\n\n      promiseCallback()\n      .then(thenCallback)\n      .then(() => setView(View.NORMAL))\n      .catch(handleFetchError);\n  };\n  \n   const  handleFetchError = err => {\n    if (err.message === pixabay.Messages.COLLECTION_END) {\n      setView (View.END);\n      return;\n    }\n\n     if (err.message === pixabay.Messages.NO_MATCHES) {\n       setImages([])\n       setView(View.EMPTY)\n       \n      return;\n    }\n\n    setView(backupView)\n   \n  };\n    \n  const  handleModalClose = () => {\n    setView(backupView)\n  };\n\n  const handleItemClick = id => {\n    setBackupView(view)\n    setModalImageURL(images.find(img => img.id === id).largeImageURL)\n    setView(View.MODAL)\n\n\n  };\n  \n  useEffect(() => {\n    const promiseCallback = () => pixabay.fetch();\n    const thenCallback = images => setImages(images)\n    handleLoading(promiseCallback, thenCallback);\n  },[])\n   return (\n     <main className={s.App}>\n        <Searchbar onSubmit={handleSubmit} />\n        <ImageGallery onItemClick={handleItemClick} images={images} />\n\n       {view === View.EMPTY && <p>There are no matching images.</p>}\n\n        {view === View.NORMAL && <Button onClick={handleLoadMore} />}\n\n        {view === View.END && <p>You've reached the collection end.</p>}\n\n      {view === View.LOADING && <ModalLoader color={'#3f51b5'} />}\n\n        {view === View.MODAL && (\n           <Modal url={modalImageURL} onClose={handleModalClose} />\n         )}\n       </main>\n     );\n\n}\n\n// class App extends Component {\n//   state = {\n//     images: [],\n//     view: View.LOADING,\n//     backupView: '',\n//     modalImageURL: '',\n//   };\n\n//   componentDidMount() {\n//     const promiseCallback = () => pixabay.fetch();\n//     const thenCallback = images => this.setState({ images, view: View.NORMAL });\n\n//     this.handleLoading(promiseCallback, thenCallback);\n//   }\n\n//   handleSubmit = query => {\n//     const promiseCallback = () => pixabay.fetch(query);\n//     const thenCallback = images => this.setState({ images, view: View.NORMAL });\n\n//     this.handleLoading(promiseCallback, thenCallback);\n//   };\n\n//   handleLoadMore = () => {\n//     const promiseCallback = pixabay.nextPage;\n//     const thenCallback = images => {\n//       this.setState(prevState => ({\n//         images: [...prevState.images, ...images],\n//         view: View.NORMAL,\n//       }));\n//     };\n\n//     this.handleLoading(promiseCallback, thenCallback);\n//   };\n\n//   handleLoading = (promiseCallback, thenCallback) => {\n//     this.setState(prevState => {\n//       return {\n//         backupView: prevState.view,\n//         view: View.LOADING,\n//       };\n//     });\n\n//     promiseCallback()\n//       .then(thenCallback)\n//       .then(() => this.setState({ view: View.NORMAL }))\n//       .catch(this.handleFetchError);\n//   };\n\n//   handleFetchError = err => {\n//     if (err.message === pixabay.Messages.COLLECTION_END) {\n//       this.setState({ view: View.END });\n//       return;\n//     }\n\n//     if (err.message === pixabay.Messages.NO_MATCHES) {\n//       this.setState({\n//         images: [],\n//         view: View.EMPTY,\n//       });\n//       return;\n//     }\n\n//     console.log(err.message);\n//     this.setState(prevState => ({ view: prevState.backupView }));\n//   };\n\n//   handleModalClose = () => {\n//     this.setState(prevState => ({ view: prevState.backupView }));\n//   };\n\n//   handleItemClick = id => {\n//     this.setState(prevState => ({\n//       backupView: prevState.view,\n//       modalImageURL: prevState.images.find(img => img.id === id).largeImageURL,\n//       view: View.MODAL,\n//     }));\n//   };\n\n//   render() {\n//     const { images, view, modalImageURL } = this.state;\n//     const { LOADING, NORMAL, END, MODAL, EMPTY } = View;\n\n//     return (\n//       <main className={s.App}>\n//         <Searchbar onSubmit={this.handleSubmit} />\n//         <ImageGallery onItemClick={this.handleItemClick} images={images} />\n\n//         {view === EMPTY && <p>There are no matching images.</p>}\n\n//         {view === NORMAL && <Button onClick={this.handleLoadMore} />}\n\n//         {view === END && <p>You've reached the collection end.</p>}\n\n//         {view === LOADING && <ModalLoader color={'#3f51b5'} />}\n\n//         {view === MODAL && (\n//           <Modal url={modalImageURL} onClose={this.handleModalClose} />\n//         )}\n//       </main>\n//     );\n//   }\n// }\n\nexport default App;\n","import {StrictMode} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"components/App\";\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}